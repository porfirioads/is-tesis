image: docker

services:
  - docker:dind

stages:
  - build
  - code-standard
  - testing
  - deploy

build-project:
  stage: build
  before_script:
    - cp .env.example .env
  script:
    - apk add --no-cache docker-compose
    - docker-compose up -d
    - docker run --rm -v $(pwd):/app composer install
    - HOST_USER_ID=$(grep HOST_USER_ID .env | xargs) && HOST_USER_ID=${HOST_USER_ID#*=}
    - cd .. && chmod -R 777 tesis-ing-software && cd tesis-ing-software
    - docker-compose exec -T app php artisan key:generate
    - docker-compose exec -T db mysql -u root -p'4YUNT4M13NT0.Z4C4T3C45' -e "GRANT ALL ON sigaz.* TO 'sigaz'@'%' IDENTIFIED BY 'sigaz_4YUNT4M13NT0';FLUSH PRIVILEGES;"
    - docker-compose exec -T app php artisan migrate:fresh --seed

php-sniffer:
  stage: code-standard
  script:
    - cat .env
    - docker-compose exec -T app vendor/bin/phpcs

unit-testing:
  stage: testing
  script:
    - docker-compose exec -T app php artisan optimize:clear && docker-compose exec -T app vendor/bin/phpunit --testdox --testsuite=Unit

unit-coverage:
  stage: testing
  script:
    - docker-compose exec -T app php artisan optimize:clear && docker-compose exec -T app vendor/bin/phpunit --testdox --coverage-text --testsuite=Unit

feature-testing:
  stage: testing
  script:
    - docker-compose exec -T app php artisan optimize:clear && docker-compose exec -T app vendor/bin/phpunit --testdox --testsuite=Feature

feature-coverage:
  stage: testing
  script:
    - docker-compose exec -T app php artisan optimize:clear && docker-compose exec -T app vendor/bin/phpunit --testdox --coverage-text --testsuite=Feature
